r 0x00001000
r 0x00001040
r 0x00001080
r 0x000010c0
w 0x00001100
w 0x00001140
r 0x00001180
r 0x000011c0
# Sequential access pattern - good for prefetching
r 0x00002000
r 0x00002040
r 0x00002080
r 0x000020c0
r 0x00002100
r 0x00002140
r 0x00002180
r 0x000021c0
# Strided access pattern
r 0x00003000
r 0x00003100
r 0x00003200
r 0x00003300
r 0x00003400
r 0x00003500
# Repeated writes (good for write combining)
w 0x00004000
w 0x00004000
w 0x00004000
w 0x00004040
w 0x00004040
w 0x00004080
# Random pattern
r 0x00005234
w 0x00007890
r 0x00006abc
r 0x00008def
w 0x00009012
r 0x0000a345
# Working set that fits in L1
r 0x0000b000
r 0x0000b040
r 0x0000b080
r 0x0000b0c0
r 0x0000b100
r 0x0000b140
r 0x0000b180
r 0x0000b1c0
# Reuse previous addresses (temporal locality)
r 0x00001000
r 0x00001040
r 0x00002000
r 0x00003000
# Conflict pattern (same cache set)
r 0x00010000
r 0x00020000
r 0x00030000
r 0x00040000
r 0x00050000
r 0x00060000
r 0x00070000
r 0x00080000
# More sequential for prefetcher training
r 0x00090000
r 0x00090040
r 0x00090080
r 0x000900c0
r 0x00090100
r 0x00090140
r 0x00090180
r 0x000901c0
r 0x00090200
r 0x00090240
# Write-intensive region
w 0x000a0000
w 0x000a0040
w 0x000a0080
w 0x000a00c0
w 0x000a0100
w 0x000a0140
w 0x000a0180
w 0x000a01c0
# Mixed read/write
r 0x000b0000
w 0x000b0040
r 0x000b0080
w 0x000b00c0
r 0x000b0100
w 0x000b0140
# Large stride pattern
r 0x000c0000
r 0x000c1000
r 0x000c2000
r 0x000c3000
r 0x000c4000
# Back to sequential
r 0x000d0000
r 0x000d0040
r 0x000d0080
r 0x000d00c0
r 0x000d0100
r 0x000d0140
r 0x000d0180
r 0x000d01c0
