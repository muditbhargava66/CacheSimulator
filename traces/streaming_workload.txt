# Streaming workload trace for testing prefetching effectiveness
# Pattern: Sequential access with periodic strides and writes
# Expected behavior: High prefetch accuracy for sequential portions
# Tests stream buffer and stride predictor

# Stream 1: Pure sequential read (ideal for prefetching)
r 0x10000
r 0x10040
r 0x10080
r 0x100c0
r 0x10100
r 0x10140
r 0x10180
r 0x101c0
r 0x10200
r 0x10240
r 0x10280
r 0x102c0
r 0x10300
r 0x10340
r 0x10380
r 0x103c0
r 0x10400
r 0x10440
r 0x10480
r 0x104c0

# Stream 2: Sequential with writes (test write combining)
r 0x20000
w 0x20040
r 0x20080
w 0x200c0
r 0x20100
w 0x20140
r 0x20180
w 0x201c0
r 0x20200
w 0x20240
r 0x20280
w 0x202c0

# Stream 3: Strided access (stride = 128 bytes)
r 0x30000
r 0x30080
r 0x30100
r 0x30180
r 0x30200
r 0x30280
r 0x30300
r 0x30380
r 0x30400
r 0x30480
r 0x30500
r 0x30580

# Stream 4: Matrix access pattern (row-major)
# Accessing 8x8 matrix of 8-byte elements
r 0x40000
r 0x40008
r 0x40010
r 0x40018
r 0x40020
r 0x40028
r 0x40030
r 0x40038
r 0x40040
r 0x40048
r 0x40050
r 0x40058
r 0x40060
r 0x40068
r 0x40070
r 0x40078

# Stream 5: Column-major access (poor spatial locality)
r 0x50000
r 0x50040
r 0x50080
r 0x500c0
r 0x50100
r 0x50140
r 0x50180
r 0x501c0
r 0x50008
r 0x50048
r 0x50088
r 0x500c8
r 0x50108
r 0x50148
r 0x50188
r 0x501c8

# Stream 6: Video/image processing pattern
# Process blocks of 64x64 pixels (1 byte each)
r 0x60000
r 0x60040
r 0x60080
r 0x600c0
w 0x60100
w 0x60140
w 0x60180
w 0x601c0
r 0x60200
r 0x60240
r 0x60280
r 0x602c0
w 0x60300
w 0x60340
w 0x60380
w 0x603c0

# Stream 7: Memcpy pattern (read then write)
r 0x70000
w 0x80000
r 0x70040
w 0x80040
r 0x70080
w 0x80080
r 0x700c0
w 0x800c0
r 0x70100
w 0x80100
r 0x70140
w 0x80140
r 0x70180
w 0x80180
r 0x701c0
w 0x801c0

# Stream 8: Large stride pattern (tests adaptive prefetching)
r 0x90000
r 0x90400
r 0x90800
r 0x90c00
r 0x91000
r 0x91400
r 0x91800
r 0x91c00
r 0x92000
r 0x92400
r 0x92800
r 0x92c00

# Stream 9: Mixed sequential and random
r 0xa0000
r 0xa0040
r 0xa0080
r 0xb5000
r 0xa00c0
r 0xa0100
r 0xa0140
r 0xc8000
r 0xa0180
r 0xa01c0
r 0xa0200
r 0xd2000

# Stream 10: Nested loop pattern
# Outer loop stride = 0x1000, inner loop sequential
r 0xb0000
r 0xb0040
r 0xb0080
r 0xb00c0
r 0xb1000
r 0xb1040
r 0xb1080
r 0xb10c0
r 0xb2000
r 0xb2040
r 0xb2080
r 0xb20c0

# Stream 11: Write-allocate test pattern
w 0xc0000
w 0xc0040
w 0xc0080
w 0xc00c0
r 0xc0000
r 0xc0040
r 0xc0080
r 0xc00c0
w 0xc0100
w 0xc0140
w 0xc0180
w 0xc01c0

# Stream 12: Prefetch pollution test
# Access pattern that might cause useless prefetches
r 0xd0000
r 0xd0040
r 0xe0000
r 0xe0040
r 0xd0080
r 0xd00c0
r 0xe0080
r 0xe00c0
r 0xd0100
r 0xd0140
r 0xe0100
r 0xe0140

# Stream 13: Database scan pattern
# Sequential with periodic jumps
r 0xf0000
r 0xf0040
r 0xf0080
r 0xf00c0
r 0xf0100
r 0xf0140
r 0xf0180
r 0xf01c0
r 0xf8000
r 0xf8040
r 0xf8080
r 0xf80c0
r 0xf8100
r 0xf8140
r 0xf8180
r 0xf81c0

# Stream 14: Compression/decompression pattern
r 0x100000
r 0x100040
r 0x100080
r 0x1000c0
w 0x110000
r 0x100100
r 0x100140
w 0x110040
r 0x100180
r 0x1001c0
w 0x110080
r 0x100200
r 0x100240
w 0x1100c0

# Stream 15: Final sequential burst
r 0x120000
r 0x120040
r 0x120080
r 0x1200c0
r 0x120100
r 0x120140
r 0x120180
r 0x1201c0
r 0x120200
r 0x120240
r 0x120280
r 0x1202c0
r 0x120300
r 0x120340
r 0x120380
r 0x1203c0
r 0x120400
r 0x120440
r 0x120480
r 0x1204c0
r 0x120500
r 0x120540
r 0x120580
r 0x1205c0
r 0x120600
r 0x120640
r 0x120680
r 0x1206c0
r 0x120700
r 0x120740
r 0x120780
r 0x1207c0
